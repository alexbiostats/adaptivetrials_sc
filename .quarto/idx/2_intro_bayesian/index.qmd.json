{"title":"Bayesian 101","markdown":{"yaml":{"title":"Bayesian 101","toc":true,"toc_float":true,"toc-location":"left","format":{"html":{"code-fold":"show","code-overflow":"wrap","code-tools":true}}},"headingText":"Overview","containsRefs":false,"markdown":"\n\n```{r, echo = FALSE}\nknitr::opts_chunk$set(\n  message = FALSE,\n  echo = TRUE\n)\n```\n\n\n\nThis module covers a crash course in Bayesian statistics. While many adaptive trial elements can be done with frequentist methods, Bayesian methods provide additional flexibility. We will introduce the basics of the Bayesian approach to statistics and cover a brief example analysis of a clinical trial using Bayesian methods.\n\n# Slide Deck\n\n<iframe class=\"speakerdeck-iframe\" style=\"border: 0px; background: rgba(0, 0, 0, 0.1) padding-box; margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 315;\" frameborder=\"0\" src=\"https://speakerdeck.com/player/9e2562ed178d47419175ba3647883c01\" title=\"Bayesian 101\" allowfullscreen=\"true\" data-ratio=\"1.7777777777777777\">\n\n</iframe>\n\nÂ \n\nYou can also download the [original PowerPoint file](../files/Slides/2_intro_bayesian.pptx).\n\n# Code Examples in R\n\n## Software Options\n\nThere are lots of statistical packages and approaches that we can use to either run Bayesian models in R, or to connect R with external software to implement the models. Some options include:\n\n-   [`brms` package](https://paul-buerkner.github.io/brms/): implements the Stan programming language within R, syntax is similar to the `lme4` package, this is our focus for Bayesian examples\n-   [`rstan` and `rstanarm` packages](https://mc-stan.org/users/interfaces/rstan): implements the Stan programming language within R, `rstanarm` uses standard `glm` syntax, runs more quickly than `brms` since models are pre-compiled\n-   [`bayestestr` package](https://easystats.github.io/bayestestR/): can provide Bayes factors and works with `rstanarm`, `brms`, and `BayesFactor`\n-   [`R2jags`](https://cran.r-project.org/web/packages/R2jags/index.html), [`rjags`](https://cran.r-project.org/web/packages/rjags/index.html), [`runjags`](https://cran.r-project.org/web/packages/runjags/index.html) packages: implements [JAGS (just another Gibbs sampler)](https://mcmc-jags.sourceforge.io/) which allows for non-gradient sampling, JAGS is one of the \"original\" approaches for implementing Bayesian analyses via software (that I remember), can be a little clunkier than other options\n\nIt is worth noting that within each software distributions may use different parameterizations, so caution should be taken to ensure the desired prior values are used. For example, the normal distribution in JAGS uses the precision (i.e., $\\tau = \\frac{1}{\\sigma^2}$), whereas Stan uses the standard deviation (i.e., $\\sigma$).\n\nDr. Kruschke has a nice introduction to Bayesian textbook that includes some [instructions for installing software for Bayesian analyses](https://sites.google.com/site/doingbayesiandataanalysis/software-installation). You may also be interested in exploring the textbook for more background on Bayesian theory, methods, and implementation.\n\nAdditionally, Stata and SAS (e.g., PROC MCMC and PROC GENMOD) include Bayesian options. These are detailed in [\"A practical guide to adopting Bayesian analyses in clinical research\"](https://www.cambridge.org/core/journals/journal-of-clinical-and-translational-science/article/practical-guide-to-adopting-bayesian-analyses-in-clinical-research/CF6C017318CD5431C98EEFE37DBB6063?utm_campaign=shareaholic&utm_medium=copy_link&utm_source=bookmark) for step-by-step guidance on their implementation.\n\n## Linear Regression Code from [\"A practical guide to adopting Bayesian analyses in clinical research\"](https://www.cambridge.org/core/journals/journal-of-clinical-and-translational-science/article/practical-guide-to-adopting-bayesian-analyses-in-clinical-research/CF6C017318CD5431C98EEFE37DBB6063?utm_campaign=shareaholic&utm_medium=copy_link&utm_source=bookmark)\n\nThis section provides the code from the published paper in R. The dataset for the paper is included in the corresponding [GitHub repository hosted by Dr. Nichole Carlson](https://github.com/nichole-carlson/BayesianClinicalResearch), but can also be downloaded as CSV here for convenience: [drugtrial.csv](./files/drugtrial.csv).\n\nFor simplicity, we focus on comparing priors across simple linear regression models, but the [GitHub repository](https://github.com/nichole-carlson/BayesianClinicalResearch) includes examples for multiple linear regression and logistic regression models as well. In this example, we have a continuous outcome of time to readiness for discharge (in minutes) that are compared by two randomized treatment groups (sufentanil (new treatment) versus IV fentanyl).\n\nFirst, let's load our packages and read in our data:\n\n```{r, warning=F}\n# CALL LIBRARIES\nlibrary(brms) #Bayesian modeling capabilities\nlibrary(bayestestR) #particular Bayesian tests\n\n# READ IN CLINICAL TRIAL DATA FROM PAPER\ntrial <- read.csv('../files/drugtrial.csv')\n\n### CHECK OUT TOP ROWS OF DATA\n## trial mini-data dictionary:\n# rowid: trial ID\n# in_phase_1_to_out_of_phase_2: time to readiness for discharge after arrival in PACU (minutes)\n# sex_n: sex of participant (1=female, 0=male)\n# groupn: randomized group (1=sufentanil, 0=IV fentanyl)\n# blockn: preoperative nerve block used (1=yes, 0=no)\n# proc_length_center: procedure length (minutes)\n\nhead(trial)\n```\n\n### Frequentist Simple Linear Regression\n\nFor comparison sake, we can first fit our frequentist simple linear regression using the `glm` function:\n\n```{r}\n# Syntax: <name of model object> <- glm(<outcome variable> ~ <predictor variable>, data = <datasetname>, family=<distribution corresponding to model type>) \nlin_reg <- glm(in_phase_1_to_out_of_phase_2 ~ groupn, \n               data=trial, \n               family='gaussian')\n\n# Syntax: summary(<model object>) - function to show model parameter estimates/results\nsummary(lin_reg)\n\n# Syntax: confint() - print confidence intervals in console\nconfint(lin_reg)\n```\n\n### brms Bayesian Simple Linear Regression Syntax\n\nThe general syntax for using `brm` is described below:\n\n```{r}\n# Syntax: using brm function for Bayesian modeling\n#   <name of model object> <- brm(<outcome variable> ~ <predictor variable>, \n#            data = <datasetname>, \n#            family=<distribution corresponding to model type>,\n#            prior = c(set_prior(\"<distribution(mean,SD)\", class = \"<name>\")),\n#            seed = <value - for reproducibility>,\n#            init = <name of initial values list>,\n#            warmup = <sets the # of burn-in iterations (those that will be 'thrown out')>,\n#            iter = <# of total iterations for each chain including burn-in>\n#            chains = <# of chains>,\n#            cores = <#> to use for executing chains in parallel - for processing)\n```\n\nWe also will create a set of initial values to use for each our simple linear regressions below:\n\n```{r}\n# Set initial starting values for chains by creating a list, will be used for all simple linear regressions\n# Syntax: list(<model parameter> = <starting value>); be sure to list all parameters\ninits <- list(\n  Intercept = 0,\n  sigma     = 1,\n  beta      = 0 )\n\n# Syntax: <new_list> <- list(<initial values list name>) - Create list of all initial values\nlist_of_inits <- list(inits, inits, inits)\n```\n\n### brms SLR with Pseudo Vague Prior\n\nIn this example, we fit a \"pseudo-vague\" prior where $\\sigma^2 = 1000$ or, equivalently, $\\sigma = \\sqrt{1000} = 31.62278$. Here we call the prior \"pseudo-vague\" because it turns out that while it seems like a *large* variance, since $\\beta_0 \\sim N(\\mu=0, \\sigma=31.62278)$, there is some biasing towards a mean of 0.\n\n```{r brms-slr-pseudo-vague-prior, cache=T}\nfit_lin_1 <-brm(in_phase_1_to_out_of_phase_2 ~ groupn,\n                data=trial,\n                family='gaussian',\n                prior = c(set_prior(\"normal(0,31.62278)\", class = \"b\"),\n                          set_prior(\"normal(0,31.62278)\", class =\"Intercept\"),\n                          set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                seed= 123,\n                init=list_of_inits,\n                warmup = 1000, iter = 10000, chains = 2, cores=4,\n                save_pars = save_pars(all = TRUE))\n\n# Summarize parameters\nsummary(fit_lin_1)\n\n# Obtain highest density posterior interval\nbayestestR::hdi(fit_lin_1, ci=0.95) \n\n# Syntax: plot() - print Bayesian diagnostic plots to console, plots in one figure\nplot(fit_lin_1)\n\n# Request plots individually \nmcmc_plot(fit_lin_1, type=\"hist\") #histogram\nmcmc_plot(fit_lin_1, type=\"trace\") #trace plot\nmcmc_plot(fit_lin_1, type=\"acf\") #autocorrelation plot\n\n# Syntax: prior_summary() - print priors used in console\nprior_summary(fit_lin_1)\n\n# Extract posterior chains\npost_samp <- as_draws(fit_lin_1)\n\n# Combine and extract drug group posterior estimates (can add more list items if more than 2 chains)\nxpost <- c(post_samp[[1]]$b_groupn, post_samp[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost < 0) \n```\n\n### brms SLR with Vague Prior\n\nIn this example, we fit a \"vague\" prior where $\\sigma^2 = 10000$ or, equivalently, $\\sigma = \\sqrt{100} = 100$.\n\n```{r brms-slr-vague-prior, cache=T}\nfit_lin_2 <- brm(in_phase_1_to_out_of_phase_2 ~ groupn, \n                 data=trial, \n                 family='gaussian', \n                 prior = c(set_prior(\"normal(0,100)\", class = \"b\"),\n                           set_prior(\"normal(0,100)\", class = \"Intercept\"),\n                           set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                 seed= 123,\n                 init=list_of_inits,\n                 warmup = 1000, iter = 10000, chains = 2, cores=4)\n\nsummary(fit_lin_2)\nbayestestR::hdi(fit_lin_2, ci=0.95) \nplot(fit_lin_2)\nmcmc_plot(fit_lin_2, type=\"hist\") \nmcmc_plot(fit_lin_2, type=\"trace\") \nmcmc_plot(fit_lin_2, type=\"acf\") \nprior_summary(fit_lin_2)\n\n\n# OPTION 1 for calculating posterior probabilities:\n# Extract posterior chains\npost_samp2 <- as_draws(fit_lin_2)\nxpost2 <- c(post_samp2[[1]]$b_groupn, post_samp2[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost2 < 0) \n\n\n\n# OPTION 2 for calculating posterior probabilities:\n# Extract posterior chains\npost_samp2 <- as_draws_df(fit_lin_2)\n\n# Create an indicator for group < 0\npost_samp2$indicator <- post_samp2$b_groupn<0\n\n# Calculate the posterior probability\nsummary(post_samp2$indicator)\n```\n\n### brms SLR with Optimistic Prior\n\nIn this example, we fit an \"optimistic\" prior on our treatment group such that $\\beta_1 \\sim N(\\mu=-30, \\sigma=10)$. This was selected based on the estimates used for the power analysis in the original trial where it was estimated that a clinically meaningful difference would be a 30 minute reduction in readiness to discharge.\n\n```{r brms-slr-optimistic-prior, cache=T}\nfit_lin_3 <- brm(in_phase_1_to_out_of_phase_2 ~ groupn, \n                 data=trial, \n                 family='gaussian', \n                 prior = c(set_prior(\"normal(-30,10)\", class = \"b\", coef = \"groupn\"),\n                           set_prior(\"normal(0,100)\", class = \"Intercept\"),\n                           set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                 seed= 123,\n                 init=list_of_inits,\n                 warmup = 1000, iter = 10000, chains = 2, cores=4)\nsummary(fit_lin_3)\nbayestestR::hdi(fit_lin_3, ci=0.95) #get 95% HDP Credible Intervals\nplot(fit_lin_3)\nmcmc_plot(fit_lin_3, type=\"hist\") \nmcmc_plot(fit_lin_3, type=\"trace\") \nmcmc_plot(fit_lin_3, type=\"acf\") \nprior_summary(fit_lin_3)\n\n# Extract posterior chains\npost_samp3 <- as_draws(fit_lin_3)\n\nxpost3 <- c(post_samp3[[1]]$b_groupn, post_samp3[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost3 < 0) \n```\n\n### brms SLR with Skeptical Prior\n\nIn this example, we fit a \"skeptical\" prior on our treatment group such that $\\beta_1 \\sim N(\\mu=0, \\sigma=10)$. This prior represents a skeptics belief that there is a meaningful treatment difference by centering the treatment effect at 0 with smaller variance than our vague prior.\n\n```{r brms-slr-skeptical-prior, cache=T}\nfit_lin_4 <- brm(in_phase_1_to_out_of_phase_2 ~ groupn, \n                 data=trial, \n                 family='gaussian', \n                 prior = c(set_prior(\"normal(0,10)\", class = \"b\", coef = \"groupn\"),\n                           set_prior(\"normal(0,100)\", class = \"Intercept\"),\n                           set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                 seed= 123,\n                 init=list_of_inits,\n                 warmup = 1000, iter = 10000, chains = 2, cores=4)\n\nsummary(fit_lin_4)\nbayestestR::hdi(fit_lin_4, ci=0.95) #get 95% HDP Credible Intervals\nplot(fit_lin_4)\nmcmc_plot(fit_lin_4, type=\"hist\") \nmcmc_plot(fit_lin_4, type=\"trace\") \nmcmc_plot(fit_lin_4, type=\"acf\") \nprior_summary(fit_lin_4)\n\n# Extract posterior chains\npost_samp4 <- as_draws(fit_lin_4)\n\nxpost4 <- c(post_samp4[[1]]$b_groupn, post_samp4[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost4 < 0) \n```\n\n# References\n\nBelow are some references to highlight based on the slides and code:\n\n-   [A practical guide to adopting Bayesian analyses in clinical research](https://www.cambridge.org/core/journals/journal-of-clinical-and-translational-science/article/practical-guide-to-adopting-bayesian-analyses-in-clinical-research/CF6C017318CD5431C98EEFE37DBB6063?utm_campaign=shareaholic&utm_medium=copy_link&utm_source=bookmark): 2024 tutorial paper exploring the Bayesian approach to statistics and how to apply the methods for clinical trials\n","srcMarkdownNoYaml":"\n\n```{r, echo = FALSE}\nknitr::opts_chunk$set(\n  message = FALSE,\n  echo = TRUE\n)\n```\n\n\n# Overview\n\nThis module covers a crash course in Bayesian statistics. While many adaptive trial elements can be done with frequentist methods, Bayesian methods provide additional flexibility. We will introduce the basics of the Bayesian approach to statistics and cover a brief example analysis of a clinical trial using Bayesian methods.\n\n# Slide Deck\n\n<iframe class=\"speakerdeck-iframe\" style=\"border: 0px; background: rgba(0, 0, 0, 0.1) padding-box; margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 315;\" frameborder=\"0\" src=\"https://speakerdeck.com/player/9e2562ed178d47419175ba3647883c01\" title=\"Bayesian 101\" allowfullscreen=\"true\" data-ratio=\"1.7777777777777777\">\n\n</iframe>\n\nÂ \n\nYou can also download the [original PowerPoint file](../files/Slides/2_intro_bayesian.pptx).\n\n# Code Examples in R\n\n## Software Options\n\nThere are lots of statistical packages and approaches that we can use to either run Bayesian models in R, or to connect R with external software to implement the models. Some options include:\n\n-   [`brms` package](https://paul-buerkner.github.io/brms/): implements the Stan programming language within R, syntax is similar to the `lme4` package, this is our focus for Bayesian examples\n-   [`rstan` and `rstanarm` packages](https://mc-stan.org/users/interfaces/rstan): implements the Stan programming language within R, `rstanarm` uses standard `glm` syntax, runs more quickly than `brms` since models are pre-compiled\n-   [`bayestestr` package](https://easystats.github.io/bayestestR/): can provide Bayes factors and works with `rstanarm`, `brms`, and `BayesFactor`\n-   [`R2jags`](https://cran.r-project.org/web/packages/R2jags/index.html), [`rjags`](https://cran.r-project.org/web/packages/rjags/index.html), [`runjags`](https://cran.r-project.org/web/packages/runjags/index.html) packages: implements [JAGS (just another Gibbs sampler)](https://mcmc-jags.sourceforge.io/) which allows for non-gradient sampling, JAGS is one of the \"original\" approaches for implementing Bayesian analyses via software (that I remember), can be a little clunkier than other options\n\nIt is worth noting that within each software distributions may use different parameterizations, so caution should be taken to ensure the desired prior values are used. For example, the normal distribution in JAGS uses the precision (i.e., $\\tau = \\frac{1}{\\sigma^2}$), whereas Stan uses the standard deviation (i.e., $\\sigma$).\n\nDr. Kruschke has a nice introduction to Bayesian textbook that includes some [instructions for installing software for Bayesian analyses](https://sites.google.com/site/doingbayesiandataanalysis/software-installation). You may also be interested in exploring the textbook for more background on Bayesian theory, methods, and implementation.\n\nAdditionally, Stata and SAS (e.g., PROC MCMC and PROC GENMOD) include Bayesian options. These are detailed in [\"A practical guide to adopting Bayesian analyses in clinical research\"](https://www.cambridge.org/core/journals/journal-of-clinical-and-translational-science/article/practical-guide-to-adopting-bayesian-analyses-in-clinical-research/CF6C017318CD5431C98EEFE37DBB6063?utm_campaign=shareaholic&utm_medium=copy_link&utm_source=bookmark) for step-by-step guidance on their implementation.\n\n## Linear Regression Code from [\"A practical guide to adopting Bayesian analyses in clinical research\"](https://www.cambridge.org/core/journals/journal-of-clinical-and-translational-science/article/practical-guide-to-adopting-bayesian-analyses-in-clinical-research/CF6C017318CD5431C98EEFE37DBB6063?utm_campaign=shareaholic&utm_medium=copy_link&utm_source=bookmark)\n\nThis section provides the code from the published paper in R. The dataset for the paper is included in the corresponding [GitHub repository hosted by Dr. Nichole Carlson](https://github.com/nichole-carlson/BayesianClinicalResearch), but can also be downloaded as CSV here for convenience: [drugtrial.csv](./files/drugtrial.csv).\n\nFor simplicity, we focus on comparing priors across simple linear regression models, but the [GitHub repository](https://github.com/nichole-carlson/BayesianClinicalResearch) includes examples for multiple linear regression and logistic regression models as well. In this example, we have a continuous outcome of time to readiness for discharge (in minutes) that are compared by two randomized treatment groups (sufentanil (new treatment) versus IV fentanyl).\n\nFirst, let's load our packages and read in our data:\n\n```{r, warning=F}\n# CALL LIBRARIES\nlibrary(brms) #Bayesian modeling capabilities\nlibrary(bayestestR) #particular Bayesian tests\n\n# READ IN CLINICAL TRIAL DATA FROM PAPER\ntrial <- read.csv('../files/drugtrial.csv')\n\n### CHECK OUT TOP ROWS OF DATA\n## trial mini-data dictionary:\n# rowid: trial ID\n# in_phase_1_to_out_of_phase_2: time to readiness for discharge after arrival in PACU (minutes)\n# sex_n: sex of participant (1=female, 0=male)\n# groupn: randomized group (1=sufentanil, 0=IV fentanyl)\n# blockn: preoperative nerve block used (1=yes, 0=no)\n# proc_length_center: procedure length (minutes)\n\nhead(trial)\n```\n\n### Frequentist Simple Linear Regression\n\nFor comparison sake, we can first fit our frequentist simple linear regression using the `glm` function:\n\n```{r}\n# Syntax: <name of model object> <- glm(<outcome variable> ~ <predictor variable>, data = <datasetname>, family=<distribution corresponding to model type>) \nlin_reg <- glm(in_phase_1_to_out_of_phase_2 ~ groupn, \n               data=trial, \n               family='gaussian')\n\n# Syntax: summary(<model object>) - function to show model parameter estimates/results\nsummary(lin_reg)\n\n# Syntax: confint() - print confidence intervals in console\nconfint(lin_reg)\n```\n\n### brms Bayesian Simple Linear Regression Syntax\n\nThe general syntax for using `brm` is described below:\n\n```{r}\n# Syntax: using brm function for Bayesian modeling\n#   <name of model object> <- brm(<outcome variable> ~ <predictor variable>, \n#            data = <datasetname>, \n#            family=<distribution corresponding to model type>,\n#            prior = c(set_prior(\"<distribution(mean,SD)\", class = \"<name>\")),\n#            seed = <value - for reproducibility>,\n#            init = <name of initial values list>,\n#            warmup = <sets the # of burn-in iterations (those that will be 'thrown out')>,\n#            iter = <# of total iterations for each chain including burn-in>\n#            chains = <# of chains>,\n#            cores = <#> to use for executing chains in parallel - for processing)\n```\n\nWe also will create a set of initial values to use for each our simple linear regressions below:\n\n```{r}\n# Set initial starting values for chains by creating a list, will be used for all simple linear regressions\n# Syntax: list(<model parameter> = <starting value>); be sure to list all parameters\ninits <- list(\n  Intercept = 0,\n  sigma     = 1,\n  beta      = 0 )\n\n# Syntax: <new_list> <- list(<initial values list name>) - Create list of all initial values\nlist_of_inits <- list(inits, inits, inits)\n```\n\n### brms SLR with Pseudo Vague Prior\n\nIn this example, we fit a \"pseudo-vague\" prior where $\\sigma^2 = 1000$ or, equivalently, $\\sigma = \\sqrt{1000} = 31.62278$. Here we call the prior \"pseudo-vague\" because it turns out that while it seems like a *large* variance, since $\\beta_0 \\sim N(\\mu=0, \\sigma=31.62278)$, there is some biasing towards a mean of 0.\n\n```{r brms-slr-pseudo-vague-prior, cache=T}\nfit_lin_1 <-brm(in_phase_1_to_out_of_phase_2 ~ groupn,\n                data=trial,\n                family='gaussian',\n                prior = c(set_prior(\"normal(0,31.62278)\", class = \"b\"),\n                          set_prior(\"normal(0,31.62278)\", class =\"Intercept\"),\n                          set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                seed= 123,\n                init=list_of_inits,\n                warmup = 1000, iter = 10000, chains = 2, cores=4,\n                save_pars = save_pars(all = TRUE))\n\n# Summarize parameters\nsummary(fit_lin_1)\n\n# Obtain highest density posterior interval\nbayestestR::hdi(fit_lin_1, ci=0.95) \n\n# Syntax: plot() - print Bayesian diagnostic plots to console, plots in one figure\nplot(fit_lin_1)\n\n# Request plots individually \nmcmc_plot(fit_lin_1, type=\"hist\") #histogram\nmcmc_plot(fit_lin_1, type=\"trace\") #trace plot\nmcmc_plot(fit_lin_1, type=\"acf\") #autocorrelation plot\n\n# Syntax: prior_summary() - print priors used in console\nprior_summary(fit_lin_1)\n\n# Extract posterior chains\npost_samp <- as_draws(fit_lin_1)\n\n# Combine and extract drug group posterior estimates (can add more list items if more than 2 chains)\nxpost <- c(post_samp[[1]]$b_groupn, post_samp[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost < 0) \n```\n\n### brms SLR with Vague Prior\n\nIn this example, we fit a \"vague\" prior where $\\sigma^2 = 10000$ or, equivalently, $\\sigma = \\sqrt{100} = 100$.\n\n```{r brms-slr-vague-prior, cache=T}\nfit_lin_2 <- brm(in_phase_1_to_out_of_phase_2 ~ groupn, \n                 data=trial, \n                 family='gaussian', \n                 prior = c(set_prior(\"normal(0,100)\", class = \"b\"),\n                           set_prior(\"normal(0,100)\", class = \"Intercept\"),\n                           set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                 seed= 123,\n                 init=list_of_inits,\n                 warmup = 1000, iter = 10000, chains = 2, cores=4)\n\nsummary(fit_lin_2)\nbayestestR::hdi(fit_lin_2, ci=0.95) \nplot(fit_lin_2)\nmcmc_plot(fit_lin_2, type=\"hist\") \nmcmc_plot(fit_lin_2, type=\"trace\") \nmcmc_plot(fit_lin_2, type=\"acf\") \nprior_summary(fit_lin_2)\n\n\n# OPTION 1 for calculating posterior probabilities:\n# Extract posterior chains\npost_samp2 <- as_draws(fit_lin_2)\nxpost2 <- c(post_samp2[[1]]$b_groupn, post_samp2[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost2 < 0) \n\n\n\n# OPTION 2 for calculating posterior probabilities:\n# Extract posterior chains\npost_samp2 <- as_draws_df(fit_lin_2)\n\n# Create an indicator for group < 0\npost_samp2$indicator <- post_samp2$b_groupn<0\n\n# Calculate the posterior probability\nsummary(post_samp2$indicator)\n```\n\n### brms SLR with Optimistic Prior\n\nIn this example, we fit an \"optimistic\" prior on our treatment group such that $\\beta_1 \\sim N(\\mu=-30, \\sigma=10)$. This was selected based on the estimates used for the power analysis in the original trial where it was estimated that a clinically meaningful difference would be a 30 minute reduction in readiness to discharge.\n\n```{r brms-slr-optimistic-prior, cache=T}\nfit_lin_3 <- brm(in_phase_1_to_out_of_phase_2 ~ groupn, \n                 data=trial, \n                 family='gaussian', \n                 prior = c(set_prior(\"normal(-30,10)\", class = \"b\", coef = \"groupn\"),\n                           set_prior(\"normal(0,100)\", class = \"Intercept\"),\n                           set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                 seed= 123,\n                 init=list_of_inits,\n                 warmup = 1000, iter = 10000, chains = 2, cores=4)\nsummary(fit_lin_3)\nbayestestR::hdi(fit_lin_3, ci=0.95) #get 95% HDP Credible Intervals\nplot(fit_lin_3)\nmcmc_plot(fit_lin_3, type=\"hist\") \nmcmc_plot(fit_lin_3, type=\"trace\") \nmcmc_plot(fit_lin_3, type=\"acf\") \nprior_summary(fit_lin_3)\n\n# Extract posterior chains\npost_samp3 <- as_draws(fit_lin_3)\n\nxpost3 <- c(post_samp3[[1]]$b_groupn, post_samp3[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost3 < 0) \n```\n\n### brms SLR with Skeptical Prior\n\nIn this example, we fit a \"skeptical\" prior on our treatment group such that $\\beta_1 \\sim N(\\mu=0, \\sigma=10)$. This prior represents a skeptics belief that there is a meaningful treatment difference by centering the treatment effect at 0 with smaller variance than our vague prior.\n\n```{r brms-slr-skeptical-prior, cache=T}\nfit_lin_4 <- brm(in_phase_1_to_out_of_phase_2 ~ groupn, \n                 data=trial, \n                 family='gaussian', \n                 prior = c(set_prior(\"normal(0,10)\", class = \"b\", coef = \"groupn\"),\n                           set_prior(\"normal(0,100)\", class = \"Intercept\"),\n                           set_prior(\"inv_gamma(0.01,0.01)\", class=\"sigma\")),\n                 seed= 123,\n                 init=list_of_inits,\n                 warmup = 1000, iter = 10000, chains = 2, cores=4)\n\nsummary(fit_lin_4)\nbayestestR::hdi(fit_lin_4, ci=0.95) #get 95% HDP Credible Intervals\nplot(fit_lin_4)\nmcmc_plot(fit_lin_4, type=\"hist\") \nmcmc_plot(fit_lin_4, type=\"trace\") \nmcmc_plot(fit_lin_4, type=\"acf\") \nprior_summary(fit_lin_4)\n\n# Extract posterior chains\npost_samp4 <- as_draws(fit_lin_4)\n\nxpost4 <- c(post_samp4[[1]]$b_groupn, post_samp4[[2]]$b_groupn) \n\n# Calculate the posterior probability that our group predictor is less than 0\nmean(xpost4 < 0) \n```\n\n# References\n\nBelow are some references to highlight based on the slides and code:\n\n-   [A practical guide to adopting Bayesian analyses in clinical research](https://www.cambridge.org/core/journals/journal-of-clinical-and-translational-science/article/practical-guide-to-adopting-bayesian-analyses-in-clinical-research/CF6C017318CD5431C98EEFE37DBB6063?utm_campaign=shareaholic&utm_medium=copy_link&utm_source=bookmark): 2024 tutorial paper exploring the Bayesian approach to statistics and how to apply the methods for clinical trials\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","include-in-header":["../header.html","../header-tracker.html"],"css":["../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","theme":"flatly","title":"Bayesian 101","toc_float":true,"toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}